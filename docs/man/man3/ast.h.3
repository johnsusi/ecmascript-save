.TH "src/ast.h" 3 "Sun Apr 30 2017" "ECMAScript" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/ast.h
.SH SYNOPSIS
.br
.PP
\fC#include <iostream>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <sstream>\fP
.br
\fC#include <boost/optional\&.hpp>\fP
.br
\fC#include <boost/variant\&.hpp>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBast::Node\fP"
.br
.ti -1c
.RI "struct \fBast::List< T >\fP"
.br
.ti -1c
.RI "struct \fBast::Visitor\fP"
.br
.ti -1c
.RI "struct \fBast::Expression\fP"
.br
.ti -1c
.RI "struct \fBast::This\fP"
.br
.ti -1c
.RI "struct \fBast::Identifier\fP"
.br
.ti -1c
.RI "struct \fBast::NullLiteral\fP"
.br
.ti -1c
.RI "struct \fBast::BooleanLiteral\fP"
.br
.ti -1c
.RI "struct \fBast::NumericLiteral\fP"
.br
.ti -1c
.RI "struct \fBast::StringLiteral\fP"
.br
.ti -1c
.RI "struct \fBast::RegularExpressionLiteral\fP"
.br
.ti -1c
.RI "struct \fBast::PropertyName\fP"
.br
.ti -1c
.RI "struct \fBast::PropertyAssignment\fP"
.br
.ti -1c
.RI "struct \fBast::Elision\fP"
.br
.ti -1c
.RI "struct \fBast::ElementList\fP"
.br
.ti -1c
.RI "struct \fBast::ArrayLiteral\fP"
.br
.ti -1c
.RI "struct \fBast::PropertyNameAndValueList\fP"
.br
.ti -1c
.RI "struct \fBast::ObjectLiteral\fP"
.br
.ti -1c
.RI "struct \fBast::MemberExpression\fP"
.br
.ti -1c
.RI "struct \fBast::ArgumentList\fP"
.br
.ti -1c
.RI "struct \fBast::Arguments\fP"
.br
.ti -1c
.RI "struct \fBast::NewExpression\fP"
.br
.ti -1c
.RI "struct \fBast::CallExpression\fP"
.br
.ti -1c
.RI "struct \fBast::PostfixExpression\fP"
.br
.ti -1c
.RI "struct \fBast::UnaryExpression\fP"
.br
.ti -1c
.RI "struct \fBast::BinaryExpression\fP"
.br
.ti -1c
.RI "struct \fBast::ConditionalExpression\fP"
.br
.ti -1c
.RI "struct \fBast::VariableDeclaration\fP"
.br
.ti -1c
.RI "struct \fBast::VariableDeclarationList\fP"
.br
.ti -1c
.RI "struct \fBast::SourceElement\fP"
.br
.ti -1c
.RI "struct \fBast::Statement\fP"
.br
.ti -1c
.RI "struct \fBast::StatementList\fP"
.br
.ti -1c
.RI "struct \fBast::Block\fP"
.br
.ti -1c
.RI "struct \fBast::VariableStatement\fP"
.br
.ti -1c
.RI "struct \fBast::EmptyStatement\fP"
.br
.ti -1c
.RI "struct \fBast::ExpressionStatement\fP"
.br
.ti -1c
.RI "struct \fBast::IfStatement\fP"
.br
.ti -1c
.RI "struct \fBast::DoWhileStatement\fP"
.br
.ti -1c
.RI "struct \fBast::WhileStatement\fP"
.br
.ti -1c
.RI "struct \fBast::ForStatement\fP"
.br
.ti -1c
.RI "struct \fBast::ForInStatement\fP"
.br
.ti -1c
.RI "struct \fBast::ContinueStatement\fP"
.br
.ti -1c
.RI "struct \fBast::BreakStatement\fP"
.br
.ti -1c
.RI "struct \fBast::ReturnStatement\fP"
.br
.ti -1c
.RI "struct \fBast::WithStatement\fP"
.br
.ti -1c
.RI "struct \fBast::LabelledStatement\fP"
.br
.ti -1c
.RI "struct \fBast::CaseClause\fP"
.br
.ti -1c
.RI "struct \fBast::DefaultClause\fP"
.br
.ti -1c
.RI "struct \fBast::CaseBlock\fP"
.br
.ti -1c
.RI "struct \fBast::SwitchStatement\fP"
.br
.ti -1c
.RI "struct \fBast::ThrowStatement\fP"
.br
.ti -1c
.RI "struct \fBast::TryStatement\fP"
.br
.ti -1c
.RI "struct \fBast::DebuggerStatement\fP"
.br
.ti -1c
.RI "struct \fBast::Declaration\fP"
.br
.ti -1c
.RI "struct \fBast::SourceElements\fP"
.br
.ti -1c
.RI "struct \fBast::FormalParameterList\fP"
.br
.ti -1c
.RI "struct \fBast::FunctionBody\fP"
.br
.ti -1c
.RI "struct \fBast::FunctionDeclaration\fP"
.br
.ti -1c
.RI "struct \fBast::FunctionExpression\fP"
.br
.ti -1c
.RI "struct \fBast::Program\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBast\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBast::accept\fP (const \fBProgram\fP &program, \fBVisitor\fP &&visitor)"
.br
.ti -1c
.RI "\fBstd::string\fP \fBto_string\fP (const \fBast::Program\fP &program)"
.br
.ti -1c
.RI "\fBstd::string\fP \fBnormalize\fP (const \fBstd::string\fP &)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBstd::string\fP normalize (const \fBstd::string\fP &)"

.SS "\fBstd::string\fP to_string (const \fBast::Program\fP & program)"

.SH "Author"
.PP 
Generated automatically by Doxygen for ECMAScript from the source code\&.
