.TH "Catch::AssertionResultData" 3 "Wed Jun 14 2017" "ECMAScript" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Catch::AssertionResultData
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <catch\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAssertionResultData\fP ()"
.br
.ti -1c
.RI "void \fBnegate\fP (bool parenthesize)"
.br
.ti -1c
.RI "\fBstd::string\fP const  & \fBreconstructExpression\fP () const"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBDecomposedExpression\fP const  * \fBdecomposedExpression\fP"
.br
.ti -1c
.RI "\fBstd::string\fP \fBreconstructedExpression\fP"
.br
.ti -1c
.RI "\fBstd::string\fP \fBmessage\fP"
.br
.ti -1c
.RI "\fBResultWas::OfType\fP \fBresultType\fP"
.br
.ti -1c
.RI "bool \fBnegated\fP"
.br
.ti -1c
.RI "bool \fBparenthesized\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Catch::AssertionResultData::AssertionResultData ()\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void Catch::AssertionResultData::negate (bool parenthesize)\fC [inline]\fP"

.SS "\fBstd::string\fP const& Catch::AssertionResultData::reconstructExpression () const\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBDecomposedExpression\fP const* Catch::AssertionResultData::decomposedExpression\fC [mutable]\fP"

.SS "\fBstd::string\fP Catch::AssertionResultData::message"

.SS "bool Catch::AssertionResultData::negated"

.SS "bool Catch::AssertionResultData::parenthesized"

.SS "\fBstd::string\fP Catch::AssertionResultData::reconstructedExpression\fC [mutable]\fP"

.SS "\fBResultWas::OfType\fP Catch::AssertionResultData::resultType"


.SH "Author"
.PP 
Generated automatically by Doxygen for ECMAScript from the source code\&.
