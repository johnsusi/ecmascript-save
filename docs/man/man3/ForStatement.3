.TH "ForStatement" 3 "Sat Jun 10 2017" "ECMAScript" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ForStatement
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ast\&.h>\fP
.PP
Inherits \fBStatement\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBForStatement\fP (\fBVariableDeclarationList\fP *\fBinit\fP, \fBExpression\fP *\fBtest\fP=nullptr, \fBExpression\fP *\fBupdate\fP=nullptr, \fBStatement\fP *\fBbody\fP=nullptr)"
.br
.ti -1c
.RI "\fBForStatement\fP (\fBExpression\fP *\fBinit\fP=nullptr, \fBExpression\fP *\fBtest\fP=nullptr, \fBExpression\fP *\fBupdate\fP=nullptr, \fBStatement\fP *\fBbody\fP=nullptr)"
.br
.ti -1c
.RI "void \fBaccept\fP (\fBVisitor\fP &visitor) const override"
.br
.ti -1c
.RI "const char * \fBtype\fP () const override"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBNode\fP * \fBinit\fP"
.br
.ti -1c
.RI "\fBExpression\fP * \fBtest\fP"
.br
.ti -1c
.RI "\fBExpression\fP * \fBupdate\fP"
.br
.ti -1c
.RI "\fBStatement\fP * \fBbody\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ForStatement::ForStatement (\fBVariableDeclarationList\fP * init, \fBExpression\fP * test = \fCnullptr\fP, \fBExpression\fP * update = \fCnullptr\fP, \fBStatement\fP * body = \fCnullptr\fP)\fC [inline]\fP"

.SS "ForStatement::ForStatement (\fBExpression\fP * init = \fCnullptr\fP, \fBExpression\fP * test = \fCnullptr\fP, \fBExpression\fP * update = \fCnullptr\fP, \fBStatement\fP * body = \fCnullptr\fP)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void ForStatement::accept (\fBVisitor\fP & visitor) const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBNode\fP\&.
.SS "const char* ForStatement::type () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBNode\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBStatement\fP* ForStatement::body"

.SS "\fBNode\fP* ForStatement::init"

.SS "\fBExpression\fP* ForStatement::test"

.SS "\fBExpression\fP* ForStatement::update"


.SH "Author"
.PP 
Generated automatically by Doxygen for ECMAScript from the source code\&.
