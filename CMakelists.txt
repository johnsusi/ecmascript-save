cmake_minimum_required(VERSION 3.5)
# 3.7 with compability support for 3.5

project(ECMAScript CXX)

set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")

if (CMAKE_VERSION VERSION_LESS 3.7)
  set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake/compat;${CMAKE_MODULE_PATH}")
endif ()

option(TESTING "Enable testing" OFF)

include(Cxx14Support)
include(ColorDiagnostics)

if (APPLE)
  set(icu_include_suffixes "include")
  if (NOT ICU_ROOT)
    set(ICU_ROOT "/usr/local/opt/icu4c")
  endif ()
endif()

# add_compile_options(-ferror-limit=1)

find_package(Boost REQUIRED COMPONENTS filesystem program_options)
find_package(ICU   REQUIRED COMPONENTS uc)

include_directories(
  vendor/Catch/include
  vendor/GSL/include
  vendor/variant/include
  ${Boost_INCLUDE_DIRS}
  ${ICU_INCLUDE_DIRS}
)

set(SOURCES
  src/ast.cpp
  src/eval.cpp
  src/input_element.cpp
  src/lexer.cpp
  src/matcher.cpp
  # src/parser.cpp
  src/token.cpp
)

if (TESTING)

  include(WarningsAsErrors)

  enable_testing()

  file(GLOB UNITTEST_SOURCES "src/*_unittest.cpp")

  add_executable(UnitTest src/test_runner.cpp ${UNITTEST_SOURCES} ${SOURCES})

  target_link_libraries(UnitTest ${Boost_LIBRARIES} ${ICU_LIBRARIES})

  add_test(NAME test COMMAND UnitTest)

endif ()

add_executable(${PROJECT_NAME} src/main.cpp ${SOURCES})

target_link_libraries(${PROJECT_NAME} ${Boost_LIBRARIES} ${ICU_LIBRARIES})

