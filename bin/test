#!/usr/bin/env node
const { readFileSync } = require("fs");
const { resolve } = require("path");
const glob = require("glob");
const { spawnPromise: spawn } = require("spawn-rx");
const { green, yellow, red } = require("colors/safe");

let keepGoing = true;

const blackList = /^.*(S7.3_A7_T.|Sbp_7.9_A9_T(3|4)|S7.6.1.2.*ns).js$/i;

const whiteListData = [];

for (var i = 2; i < process.argv.length; i++) {
  if (process.argv[i] === "-k" || process.argv[i] === "--keep-going") {
    keepGoing = true;
  } else if (process.argv[i][0] == '-') {
    errorExit("Unknown argument: " + process.argv[i]);
  } else {
    whiteListData.push(process.argv[i]);
  }
}

const whiteList = whiteListData.length == 0 ? /.*/ : new RegExp( whiteListData.join("|"), 'i' );

glob(
  resolve(__dirname, "../vendor/test262/test/suite/**/*.js"),
  (err, paths) => {
    if (err) console.warn(err);
    else
      paths
        .filter(path => whiteList.test(path))
        .filter(path => !negativeTest(path))
        .reduce((seq, path) => seq.then(() => diff(path)), Promise.resolve())
        .catch(err => console.error(err));
  }
);

function diff(path) {
  return spawn(__dirname + "/diff_ast", ['-s', path])
    .then(() => console.log(`${path} ${green("OK")}`))
    .catch(err => {
      if (blackList.test(path)) console.log(`${path} ${yellow("BLACKLISTED")}`);
      else console.error(`${path} ${red("FAILED")}`);
      // if (!keepGoing) process.exit(-1);
      // else throw err;
    });
}

function negativeTest(path)
{
  return readFileSync(path, 'utf-8').indexOf("@negative") != -1;
}

